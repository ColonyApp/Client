// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace ColonyClient.iOS.colonywebservices.azurewebsites.net {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ColonyWebServiceSoap", Namespace="http://colonywebservices.azurewebsites.net/")]
    public partial class ColonyWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasUserWithoutIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasUserByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchUserDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchTargetDataGeneralOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchTargetDataDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchTargetDataByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyDataOperationCompleted;
        
        /// CodeRemarks
        public ColonyWebService() {
            this.Url = "http://colonywebservices.azurewebsites.net/ColonyWebService.asmx";
        }
        
        public ColonyWebService(string url) {
            this.Url = url;
        }
        
        /// CodeRemarks
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// CodeRemarks
        public event HasUserWithoutIdCompletedEventHandler HasUserWithoutIdCompleted;
        
        /// CodeRemarks
        public event HasUserByIdCompletedEventHandler HasUserByIdCompleted;
        
        /// CodeRemarks
        public event SearchUserDataCompletedEventHandler SearchUserDataCompleted;
        
        /// CodeRemarks
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// CodeRemarks
        public event ModifyUserCompletedEventHandler ModifyUserCompleted;
        
        /// CodeRemarks
        public event CreateGroupCompletedEventHandler CreateGroupCompleted;
        
        /// CodeRemarks
        public event ModifyGroupCompletedEventHandler ModifyGroupCompleted;
        
        /// CodeRemarks
        public event CreateDataCompletedEventHandler CreateDataCompleted;
        
        /// CodeRemarks
        public event SearchTargetDataGeneralCompletedEventHandler SearchTargetDataGeneralCompleted;
        
        /// CodeRemarks
        public event SearchTargetDataDetailCompletedEventHandler SearchTargetDataDetailCompleted;
        
        /// CodeRemarks
        public event SearchTargetDataByIdCompletedEventHandler SearchTargetDataByIdCompleted;
        
        /// CodeRemarks
        public event ModifyDataCompletedEventHandler ModifyDataCompleted;
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/HelloWorld", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// CodeRemarks
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// CodeRemarks
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/HasUserWithoutId", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasUserWithoutId(string nickName, string mailAddress) {
            object[] results = this.Invoke("HasUserWithoutId", new object[] {
                        nickName,
                        mailAddress});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void HasUserWithoutIdAsync(string nickName, string mailAddress) {
            this.HasUserWithoutIdAsync(nickName, mailAddress, null);
        }
        
        /// CodeRemarks
        public void HasUserWithoutIdAsync(string nickName, string mailAddress, object userState) {
            if ((this.HasUserWithoutIdOperationCompleted == null)) {
                this.HasUserWithoutIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasUserWithoutIdOperationCompleted);
            }
            this.InvokeAsync("HasUserWithoutId", new object[] {
                        nickName,
                        mailAddress}, this.HasUserWithoutIdOperationCompleted, userState);
        }
        
        private void OnHasUserWithoutIdOperationCompleted(object arg) {
            if ((this.HasUserWithoutIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasUserWithoutIdCompleted(this, new HasUserWithoutIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/HasUserById", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasUserById(System.Guid UserId) {
            object[] results = this.Invoke("HasUserById", new object[] {
                        UserId});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void HasUserByIdAsync(System.Guid UserId) {
            this.HasUserByIdAsync(UserId, null);
        }
        
        /// CodeRemarks
        public void HasUserByIdAsync(System.Guid UserId, object userState) {
            if ((this.HasUserByIdOperationCompleted == null)) {
                this.HasUserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasUserByIdOperationCompleted);
            }
            this.InvokeAsync("HasUserById", new object[] {
                        UserId}, this.HasUserByIdOperationCompleted, userState);
        }
        
        private void OnHasUserByIdOperationCompleted(object arg) {
            if ((this.HasUserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasUserByIdCompleted(this, new HasUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/SearchUserData", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InfomationOfUser SearchUserData(string nickName, string mailAddress) {
            object[] results = this.Invoke("SearchUserData", new object[] {
                        nickName,
                        mailAddress});
            return ((InfomationOfUser)(results[0]));
        }
        
        /// CodeRemarks
        public void SearchUserDataAsync(string nickName, string mailAddress) {
            this.SearchUserDataAsync(nickName, mailAddress, null);
        }
        
        /// CodeRemarks
        public void SearchUserDataAsync(string nickName, string mailAddress, object userState) {
            if ((this.SearchUserDataOperationCompleted == null)) {
                this.SearchUserDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchUserDataOperationCompleted);
            }
            this.InvokeAsync("SearchUserData", new object[] {
                        nickName,
                        mailAddress}, this.SearchUserDataOperationCompleted, userState);
        }
        
        private void OnSearchUserDataOperationCompleted(object arg) {
            if ((this.SearchUserDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchUserDataCompleted(this, new SearchUserDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/CreateUser", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateUser(string nickName, string mailAddress) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        nickName,
                        mailAddress});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void CreateUserAsync(string nickName, string mailAddress) {
            this.CreateUserAsync(nickName, mailAddress, null);
        }
        
        /// CodeRemarks
        public void CreateUserAsync(string nickName, string mailAddress, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        nickName,
                        mailAddress}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/ModifyUser", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyUser(string oldNickName, string newNickName, string oldMailAddress, string newMailAddress, System.Guid UserId) {
            object[] results = this.Invoke("ModifyUser", new object[] {
                        oldNickName,
                        newNickName,
                        oldMailAddress,
                        newMailAddress,
                        UserId});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void ModifyUserAsync(string oldNickName, string newNickName, string oldMailAddress, string newMailAddress, System.Guid UserId) {
            this.ModifyUserAsync(oldNickName, newNickName, oldMailAddress, newMailAddress, UserId, null);
        }
        
        /// CodeRemarks
        public void ModifyUserAsync(string oldNickName, string newNickName, string oldMailAddress, string newMailAddress, System.Guid UserId, object userState) {
            if ((this.ModifyUserOperationCompleted == null)) {
                this.ModifyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyUserOperationCompleted);
            }
            this.InvokeAsync("ModifyUser", new object[] {
                        oldNickName,
                        newNickName,
                        oldMailAddress,
                        newMailAddress,
                        UserId}, this.ModifyUserOperationCompleted, userState);
        }
        
        private void OnModifyUserOperationCompleted(object arg) {
            if ((this.ModifyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyUserCompleted(this, new ModifyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/CreateGroup", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateGroup(int number, string groupName, string nickName, string mailAddress) {
            object[] results = this.Invoke("CreateGroup", new object[] {
                        number,
                        groupName,
                        nickName,
                        mailAddress});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void CreateGroupAsync(int number, string groupName, string nickName, string mailAddress) {
            this.CreateGroupAsync(number, groupName, nickName, mailAddress, null);
        }
        
        /// CodeRemarks
        public void CreateGroupAsync(int number, string groupName, string nickName, string mailAddress, object userState) {
            if ((this.CreateGroupOperationCompleted == null)) {
                this.CreateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGroupOperationCompleted);
            }
            this.InvokeAsync("CreateGroup", new object[] {
                        number,
                        groupName,
                        nickName,
                        mailAddress}, this.CreateGroupOperationCompleted, userState);
        }
        
        private void OnCreateGroupOperationCompleted(object arg) {
            if ((this.CreateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateGroupCompleted(this, new CreateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/ModifyGroup", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyGroup(int number, string oldGroupName, string newGroupName, string nickName, string mailAddress) {
            object[] results = this.Invoke("ModifyGroup", new object[] {
                        number,
                        oldGroupName,
                        newGroupName,
                        nickName,
                        mailAddress});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void ModifyGroupAsync(int number, string oldGroupName, string newGroupName, string nickName, string mailAddress) {
            this.ModifyGroupAsync(number, oldGroupName, newGroupName, nickName, mailAddress, null);
        }
        
        /// CodeRemarks
        public void ModifyGroupAsync(int number, string oldGroupName, string newGroupName, string nickName, string mailAddress, object userState) {
            if ((this.ModifyGroupOperationCompleted == null)) {
                this.ModifyGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyGroupOperationCompleted);
            }
            this.InvokeAsync("ModifyGroup", new object[] {
                        number,
                        oldGroupName,
                        newGroupName,
                        nickName,
                        mailAddress}, this.ModifyGroupOperationCompleted, userState);
        }
        
        private void OnModifyGroupOperationCompleted(object arg) {
            if ((this.ModifyGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyGroupCompleted(this, new ModifyGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/CreateData", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateData(string nickName, string mailAddress, int mode, string whatAttribute, System.DateTime whenAttribute, string whyAttribute, string whoAttribute, string whereAttribute, string whomAttribute, string howAttribute, decimal howMuchAttribute, decimal howManyAttribute) {
            object[] results = this.Invoke("CreateData", new object[] {
                        nickName,
                        mailAddress,
                        mode,
                        whatAttribute,
                        whenAttribute,
                        whyAttribute,
                        whoAttribute,
                        whereAttribute,
                        whomAttribute,
                        howAttribute,
                        howMuchAttribute,
                        howManyAttribute});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void CreateDataAsync(string nickName, string mailAddress, int mode, string whatAttribute, System.DateTime whenAttribute, string whyAttribute, string whoAttribute, string whereAttribute, string whomAttribute, string howAttribute, decimal howMuchAttribute, decimal howManyAttribute) {
            this.CreateDataAsync(nickName, mailAddress, mode, whatAttribute, whenAttribute, whyAttribute, whoAttribute, whereAttribute, whomAttribute, howAttribute, howMuchAttribute, howManyAttribute, null);
        }
        
        /// CodeRemarks
        public void CreateDataAsync(string nickName, string mailAddress, int mode, string whatAttribute, System.DateTime whenAttribute, string whyAttribute, string whoAttribute, string whereAttribute, string whomAttribute, string howAttribute, decimal howMuchAttribute, decimal howManyAttribute, object userState) {
            if ((this.CreateDataOperationCompleted == null)) {
                this.CreateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDataOperationCompleted);
            }
            this.InvokeAsync("CreateData", new object[] {
                        nickName,
                        mailAddress,
                        mode,
                        whatAttribute,
                        whenAttribute,
                        whyAttribute,
                        whoAttribute,
                        whereAttribute,
                        whomAttribute,
                        howAttribute,
                        howMuchAttribute,
                        howManyAttribute}, this.CreateDataOperationCompleted, userState);
        }
        
        private void OnCreateDataOperationCompleted(object arg) {
            if ((this.CreateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDataCompleted(this, new CreateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/SearchTargetDataGeneral", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TargetData[] SearchTargetDataGeneral(string mode, string condition) {
            object[] results = this.Invoke("SearchTargetDataGeneral", new object[] {
                        mode,
                        condition});
            return ((TargetData[])(results[0]));
        }
        
        /// CodeRemarks
        public void SearchTargetDataGeneralAsync(string mode, string condition) {
            this.SearchTargetDataGeneralAsync(mode, condition, null);
        }
        
        /// CodeRemarks
        public void SearchTargetDataGeneralAsync(string mode, string condition, object userState) {
            if ((this.SearchTargetDataGeneralOperationCompleted == null)) {
                this.SearchTargetDataGeneralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchTargetDataGeneralOperationCompleted);
            }
            this.InvokeAsync("SearchTargetDataGeneral", new object[] {
                        mode,
                        condition}, this.SearchTargetDataGeneralOperationCompleted, userState);
        }
        
        private void OnSearchTargetDataGeneralOperationCompleted(object arg) {
            if ((this.SearchTargetDataGeneralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchTargetDataGeneralCompleted(this, new SearchTargetDataGeneralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/SearchTargetDataDetail", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TargetData[] SearchTargetDataDetail(string nickName, string mailAddress, string mode, string whatAttribute, System.DateTime occurrenceDateTime, System.DateTime whenAttribute, string whyAttribute, string whoAttribute, string whereAttribute, string whomAttribute, string howAttribute, decimal howMuchAttribute, decimal howManyAttribute) {
            object[] results = this.Invoke("SearchTargetDataDetail", new object[] {
                        nickName,
                        mailAddress,
                        mode,
                        whatAttribute,
                        occurrenceDateTime,
                        whenAttribute,
                        whyAttribute,
                        whoAttribute,
                        whereAttribute,
                        whomAttribute,
                        howAttribute,
                        howMuchAttribute,
                        howManyAttribute});
            return ((TargetData[])(results[0]));
        }
        
        /// CodeRemarks
        public void SearchTargetDataDetailAsync(string nickName, string mailAddress, string mode, string whatAttribute, System.DateTime occurrenceDateTime, System.DateTime whenAttribute, string whyAttribute, string whoAttribute, string whereAttribute, string whomAttribute, string howAttribute, decimal howMuchAttribute, decimal howManyAttribute) {
            this.SearchTargetDataDetailAsync(nickName, mailAddress, mode, whatAttribute, occurrenceDateTime, whenAttribute, whyAttribute, whoAttribute, whereAttribute, whomAttribute, howAttribute, howMuchAttribute, howManyAttribute, null);
        }
        
        /// CodeRemarks
        public void SearchTargetDataDetailAsync(string nickName, string mailAddress, string mode, string whatAttribute, System.DateTime occurrenceDateTime, System.DateTime whenAttribute, string whyAttribute, string whoAttribute, string whereAttribute, string whomAttribute, string howAttribute, decimal howMuchAttribute, decimal howManyAttribute, object userState) {
            if ((this.SearchTargetDataDetailOperationCompleted == null)) {
                this.SearchTargetDataDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchTargetDataDetailOperationCompleted);
            }
            this.InvokeAsync("SearchTargetDataDetail", new object[] {
                        nickName,
                        mailAddress,
                        mode,
                        whatAttribute,
                        occurrenceDateTime,
                        whenAttribute,
                        whyAttribute,
                        whoAttribute,
                        whereAttribute,
                        whomAttribute,
                        howAttribute,
                        howMuchAttribute,
                        howManyAttribute}, this.SearchTargetDataDetailOperationCompleted, userState);
        }
        
        private void OnSearchTargetDataDetailOperationCompleted(object arg) {
            if ((this.SearchTargetDataDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchTargetDataDetailCompleted(this, new SearchTargetDataDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/SearchTargetDataById", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TargetData[] SearchTargetDataById(string nickName, string mailAddress, System.Guid targetDataId) {
            object[] results = this.Invoke("SearchTargetDataById", new object[] {
                        nickName,
                        mailAddress,
                        targetDataId});
            return ((TargetData[])(results[0]));
        }
        
        /// CodeRemarks
        public void SearchTargetDataByIdAsync(string nickName, string mailAddress, System.Guid targetDataId) {
            this.SearchTargetDataByIdAsync(nickName, mailAddress, targetDataId, null);
        }
        
        /// CodeRemarks
        public void SearchTargetDataByIdAsync(string nickName, string mailAddress, System.Guid targetDataId, object userState) {
            if ((this.SearchTargetDataByIdOperationCompleted == null)) {
                this.SearchTargetDataByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchTargetDataByIdOperationCompleted);
            }
            this.InvokeAsync("SearchTargetDataById", new object[] {
                        nickName,
                        mailAddress,
                        targetDataId}, this.SearchTargetDataByIdOperationCompleted, userState);
        }
        
        private void OnSearchTargetDataByIdOperationCompleted(object arg) {
            if ((this.SearchTargetDataByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchTargetDataByIdCompleted(this, new SearchTargetDataByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://colonywebservices.azurewebsites.net/ModifyData", RequestNamespace="http://colonywebservices.azurewebsites.net/", ResponseNamespace="http://colonywebservices.azurewebsites.net/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyData(string nickName, string mailAddress, string mode, string whatAttribute, System.DateTime occurrenceDateTime, System.DateTime whenAttribute, string whyAttribute, string whoAttribute, string whereAttribute, string whomAttribute, string howAttribute, decimal howMuchAttribute, decimal howManyAttribute, System.Guid targetDataId, bool isLogicalDelete) {
            object[] results = this.Invoke("ModifyData", new object[] {
                        nickName,
                        mailAddress,
                        mode,
                        whatAttribute,
                        occurrenceDateTime,
                        whenAttribute,
                        whyAttribute,
                        whoAttribute,
                        whereAttribute,
                        whomAttribute,
                        howAttribute,
                        howMuchAttribute,
                        howManyAttribute,
                        targetDataId,
                        isLogicalDelete});
            return ((bool)(results[0]));
        }
        
        /// CodeRemarks
        public void ModifyDataAsync(string nickName, string mailAddress, string mode, string whatAttribute, System.DateTime occurrenceDateTime, System.DateTime whenAttribute, string whyAttribute, string whoAttribute, string whereAttribute, string whomAttribute, string howAttribute, decimal howMuchAttribute, decimal howManyAttribute, System.Guid targetDataId, bool isLogicalDelete) {
            this.ModifyDataAsync(nickName, mailAddress, mode, whatAttribute, occurrenceDateTime, whenAttribute, whyAttribute, whoAttribute, whereAttribute, whomAttribute, howAttribute, howMuchAttribute, howManyAttribute, targetDataId, isLogicalDelete, null);
        }
        
        /// CodeRemarks
        public void ModifyDataAsync(
                    string nickName, 
                    string mailAddress, 
                    string mode, 
                    string whatAttribute, 
                    System.DateTime occurrenceDateTime, 
                    System.DateTime whenAttribute, 
                    string whyAttribute, 
                    string whoAttribute, 
                    string whereAttribute, 
                    string whomAttribute, 
                    string howAttribute, 
                    decimal howMuchAttribute, 
                    decimal howManyAttribute, 
                    System.Guid targetDataId, 
                    bool isLogicalDelete, 
                    object userState) {
            if ((this.ModifyDataOperationCompleted == null)) {
                this.ModifyDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyDataOperationCompleted);
            }
            this.InvokeAsync("ModifyData", new object[] {
                        nickName,
                        mailAddress,
                        mode,
                        whatAttribute,
                        occurrenceDateTime,
                        whenAttribute,
                        whyAttribute,
                        whoAttribute,
                        whereAttribute,
                        whomAttribute,
                        howAttribute,
                        howMuchAttribute,
                        howManyAttribute,
                        targetDataId,
                        isLogicalDelete}, this.ModifyDataOperationCompleted, userState);
        }
        
        private void OnModifyDataOperationCompleted(object arg) {
            if ((this.ModifyDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyDataCompleted(this, new ModifyDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// CodeRemarks
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://colonywebservices.azurewebsites.net/")]
    public partial class InfomationOfUser {
        
        /// <remarks/>
        public System.Guid UserID;
        
        /// <remarks/>
        public string NickName;
        
        /// <remarks/>
        public string MailAddress;
        
        /// <remarks/>
        public bool IsLogicalDelete;
        
        /// <remarks/>
        public System.Guid GroupID01;
        
        /// <remarks/>
        public string GroupName01;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://colonywebservices.azurewebsites.net/")]
    public partial class TargetData {
        
        /// <remarks/>
        public InfomationOfUser UserInfo;
        
        /// <remarks/>
        public System.Guid TargetDataId;
        
        /// <remarks/>
        public int Mode;
        
        /// <remarks/>
        public string Tags;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> OccurrenceDataTime;
        
        /// <remarks/>
        public string WhatAttribute;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> WhenAttribute;
        
        /// <remarks/>
        public string WhyAttribute;
        
        /// <remarks/>
        public System.Guid WhoAttribute;
        
        /// <remarks/>
        public string WhereAttribute;
        
        /// <remarks/>
        public string WhomAttribute;
        
        /// <remarks/>
        public string HowAttribute;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> HowMuchAttribute;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<decimal> HowManyAttribute;
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void HasUserWithoutIdCompletedEventHandler(object sender, HasUserWithoutIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasUserWithoutIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasUserWithoutIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void HasUserByIdCompletedEventHandler(object sender, HasUserByIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void SearchUserDataCompletedEventHandler(object sender, SearchUserDataCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchUserDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchUserDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public InfomationOfUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InfomationOfUser)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void ModifyUserCompletedEventHandler(object sender, ModifyUserCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void CreateGroupCompletedEventHandler(object sender, CreateGroupCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void ModifyGroupCompletedEventHandler(object sender, ModifyGroupCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void CreateDataCompletedEventHandler(object sender, CreateDataCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void SearchTargetDataGeneralCompletedEventHandler(object sender, SearchTargetDataGeneralCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchTargetDataGeneralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchTargetDataGeneralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TargetData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TargetData[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void SearchTargetDataDetailCompletedEventHandler(object sender, SearchTargetDataDetailCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchTargetDataDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchTargetDataDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TargetData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TargetData[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void SearchTargetDataByIdCompletedEventHandler(object sender, SearchTargetDataByIdCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchTargetDataByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchTargetDataByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public TargetData[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TargetData[])(this.results[0]));
            }
        }
    }
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    public delegate void ModifyDataCompletedEventHandler(object sender, ModifyDataCompletedEventArgs e);
    
    /// CodeRemarks
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// CodeRemarks
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}
